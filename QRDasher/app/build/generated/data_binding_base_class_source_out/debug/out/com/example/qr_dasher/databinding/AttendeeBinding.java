// Generated by view binder compiler. Do not edit!
package com.example.qr_dasher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qr_dasher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttendeeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button editProfileButton;

  @NonNull
  public final Button notificationButton;

  @NonNull
  public final Button qrButton;

  @NonNull
  public final ListView scannedEventsListView;

  @NonNull
  public final TextView scannedEventsText;

  @NonNull
  public final TextView welcomeText;

  private AttendeeBinding(@NonNull ConstraintLayout rootView, @NonNull Button editProfileButton,
      @NonNull Button notificationButton, @NonNull Button qrButton,
      @NonNull ListView scannedEventsListView, @NonNull TextView scannedEventsText,
      @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.editProfileButton = editProfileButton;
    this.notificationButton = notificationButton;
    this.qrButton = qrButton;
    this.scannedEventsListView = scannedEventsListView;
    this.scannedEventsText = scannedEventsText;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttendeeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttendeeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attendee, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttendeeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_profile_button;
      Button editProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (editProfileButton == null) {
        break missingId;
      }

      id = R.id.notification_button;
      Button notificationButton = ViewBindings.findChildViewById(rootView, id);
      if (notificationButton == null) {
        break missingId;
      }

      id = R.id.qr_button;
      Button qrButton = ViewBindings.findChildViewById(rootView, id);
      if (qrButton == null) {
        break missingId;
      }

      id = R.id.scanned_events_list_view;
      ListView scannedEventsListView = ViewBindings.findChildViewById(rootView, id);
      if (scannedEventsListView == null) {
        break missingId;
      }

      id = R.id.scanned_events_text;
      TextView scannedEventsText = ViewBindings.findChildViewById(rootView, id);
      if (scannedEventsText == null) {
        break missingId;
      }

      id = R.id.welcome_text;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new AttendeeBinding((ConstraintLayout) rootView, editProfileButton, notificationButton,
          qrButton, scannedEventsListView, scannedEventsText, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

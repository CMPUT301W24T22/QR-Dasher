// Generated by view binder compiler. Do not edit!
package com.example.qr_dasher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qr_dasher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminEventPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button attendeeQrButton;

  @NonNull
  public final Button attendeesButton;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final Button deleteImageButton;

  @NonNull
  public final TextView eventDetails;

  @NonNull
  public final TextView eventId;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final TextView eventOrganizer;

  @NonNull
  public final ImageView eventPoster;

  @NonNull
  public final Button promotionalQrButton;

  @NonNull
  public final Button signedUpButton;

  private ActivityAdminEventPageBinding(@NonNull LinearLayout rootView,
      @NonNull Button attendeeQrButton, @NonNull Button attendeesButton, @NonNull Button backButton,
      @NonNull Button deleteButton, @NonNull Button deleteImageButton,
      @NonNull TextView eventDetails, @NonNull TextView eventId, @NonNull TextView eventName,
      @NonNull TextView eventOrganizer, @NonNull ImageView eventPoster,
      @NonNull Button promotionalQrButton, @NonNull Button signedUpButton) {
    this.rootView = rootView;
    this.attendeeQrButton = attendeeQrButton;
    this.attendeesButton = attendeesButton;
    this.backButton = backButton;
    this.deleteButton = deleteButton;
    this.deleteImageButton = deleteImageButton;
    this.eventDetails = eventDetails;
    this.eventId = eventId;
    this.eventName = eventName;
    this.eventOrganizer = eventOrganizer;
    this.eventPoster = eventPoster;
    this.promotionalQrButton = promotionalQrButton;
    this.signedUpButton = signedUpButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminEventPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminEventPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_event_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminEventPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attendee_qr_button;
      Button attendeeQrButton = ViewBindings.findChildViewById(rootView, id);
      if (attendeeQrButton == null) {
        break missingId;
      }

      id = R.id.attendees_button;
      Button attendeesButton = ViewBindings.findChildViewById(rootView, id);
      if (attendeesButton == null) {
        break missingId;
      }

      id = R.id.back_button;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.delete_button;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.delete_image_button;
      Button deleteImageButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteImageButton == null) {
        break missingId;
      }

      id = R.id.event_details;
      TextView eventDetails = ViewBindings.findChildViewById(rootView, id);
      if (eventDetails == null) {
        break missingId;
      }

      id = R.id.event_id;
      TextView eventId = ViewBindings.findChildViewById(rootView, id);
      if (eventId == null) {
        break missingId;
      }

      id = R.id.event_name;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.event_organizer;
      TextView eventOrganizer = ViewBindings.findChildViewById(rootView, id);
      if (eventOrganizer == null) {
        break missingId;
      }

      id = R.id.event_poster;
      ImageView eventPoster = ViewBindings.findChildViewById(rootView, id);
      if (eventPoster == null) {
        break missingId;
      }

      id = R.id.promotional_qr_button;
      Button promotionalQrButton = ViewBindings.findChildViewById(rootView, id);
      if (promotionalQrButton == null) {
        break missingId;
      }

      id = R.id.signed_up_button;
      Button signedUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signedUpButton == null) {
        break missingId;
      }

      return new ActivityAdminEventPageBinding((LinearLayout) rootView, attendeeQrButton,
          attendeesButton, backButton, deleteButton, deleteImageButton, eventDetails, eventId,
          eventName, eventOrganizer, eventPoster, promotionalQrButton, signedUpButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

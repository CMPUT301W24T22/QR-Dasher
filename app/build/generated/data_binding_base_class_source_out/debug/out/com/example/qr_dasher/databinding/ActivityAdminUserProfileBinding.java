// Generated by view binder compiler. Do not edit!
package com.example.qr_dasher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qr_dasher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminUserProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button attendedEventsButton;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button createdEventsButton;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final Button deleteImageButton;

  @NonNull
  public final CheckBox geolocation;

  @NonNull
  public final ImageView imageUpload;

  @NonNull
  public final Button signedupEventsButton;

  @NonNull
  public final TextView userDetails;

  @NonNull
  public final TextView userEmail;

  @NonNull
  public final TextView userId;

  @NonNull
  public final TextView userName;

  private ActivityAdminUserProfileBinding(@NonNull LinearLayout rootView,
      @NonNull Button attendedEventsButton, @NonNull Button backButton,
      @NonNull Button createdEventsButton, @NonNull Button deleteButton,
      @NonNull Button deleteImageButton, @NonNull CheckBox geolocation,
      @NonNull ImageView imageUpload, @NonNull Button signedupEventsButton,
      @NonNull TextView userDetails, @NonNull TextView userEmail, @NonNull TextView userId,
      @NonNull TextView userName) {
    this.rootView = rootView;
    this.attendedEventsButton = attendedEventsButton;
    this.backButton = backButton;
    this.createdEventsButton = createdEventsButton;
    this.deleteButton = deleteButton;
    this.deleteImageButton = deleteImageButton;
    this.geolocation = geolocation;
    this.imageUpload = imageUpload;
    this.signedupEventsButton = signedupEventsButton;
    this.userDetails = userDetails;
    this.userEmail = userEmail;
    this.userId = userId;
    this.userName = userName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminUserProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminUserProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_user_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminUserProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attended_events_button;
      Button attendedEventsButton = ViewBindings.findChildViewById(rootView, id);
      if (attendedEventsButton == null) {
        break missingId;
      }

      id = R.id.back_button;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.created_events_button;
      Button createdEventsButton = ViewBindings.findChildViewById(rootView, id);
      if (createdEventsButton == null) {
        break missingId;
      }

      id = R.id.delete_button;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.delete_image_button;
      Button deleteImageButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteImageButton == null) {
        break missingId;
      }

      id = R.id.geolocation;
      CheckBox geolocation = ViewBindings.findChildViewById(rootView, id);
      if (geolocation == null) {
        break missingId;
      }

      id = R.id.image_upload;
      ImageView imageUpload = ViewBindings.findChildViewById(rootView, id);
      if (imageUpload == null) {
        break missingId;
      }

      id = R.id.signedup_events_button;
      Button signedupEventsButton = ViewBindings.findChildViewById(rootView, id);
      if (signedupEventsButton == null) {
        break missingId;
      }

      id = R.id.user_details;
      TextView userDetails = ViewBindings.findChildViewById(rootView, id);
      if (userDetails == null) {
        break missingId;
      }

      id = R.id.user_email;
      TextView userEmail = ViewBindings.findChildViewById(rootView, id);
      if (userEmail == null) {
        break missingId;
      }

      id = R.id.user_id;
      TextView userId = ViewBindings.findChildViewById(rootView, id);
      if (userId == null) {
        break missingId;
      }

      id = R.id.user_name;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ActivityAdminUserProfileBinding((LinearLayout) rootView, attendedEventsButton,
          backButton, createdEventsButton, deleteButton, deleteImageButton, geolocation,
          imageUpload, signedupEventsButton, userDetails, userEmail, userId, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

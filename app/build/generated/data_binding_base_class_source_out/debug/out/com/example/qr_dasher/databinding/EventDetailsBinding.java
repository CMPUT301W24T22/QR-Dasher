// Generated by view binder compiler. Do not edit!
package com.example.qr_dasher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qr_dasher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.osmdroid.views.MapView;

public final class EventDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView attendeeCount;

  @NonNull
  public final ListView attendeeListView;

  @NonNull
  public final TextView attendeeTextSignups;

  @NonNull
  public final TextView attendees;

  @NonNull
  public final TextView eventNameTextView;

  @NonNull
  public final CardView mapCard;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final Button notifyButton;

  @NonNull
  public final Button qrCodeButton;

  @NonNull
  public final ListView signupListview;

  private EventDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView attendeeCount,
      @NonNull ListView attendeeListView, @NonNull TextView attendeeTextSignups,
      @NonNull TextView attendees, @NonNull TextView eventNameTextView, @NonNull CardView mapCard,
      @NonNull MapView mapView, @NonNull Button notifyButton, @NonNull Button qrCodeButton,
      @NonNull ListView signupListview) {
    this.rootView = rootView;
    this.attendeeCount = attendeeCount;
    this.attendeeListView = attendeeListView;
    this.attendeeTextSignups = attendeeTextSignups;
    this.attendees = attendees;
    this.eventNameTextView = eventNameTextView;
    this.mapCard = mapCard;
    this.mapView = mapView;
    this.notifyButton = notifyButton;
    this.qrCodeButton = qrCodeButton;
    this.signupListview = signupListview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attendeeCount;
      TextView attendeeCount = ViewBindings.findChildViewById(rootView, id);
      if (attendeeCount == null) {
        break missingId;
      }

      id = R.id.attendee_list_view;
      ListView attendeeListView = ViewBindings.findChildViewById(rootView, id);
      if (attendeeListView == null) {
        break missingId;
      }

      id = R.id.attendee_text_signups;
      TextView attendeeTextSignups = ViewBindings.findChildViewById(rootView, id);
      if (attendeeTextSignups == null) {
        break missingId;
      }

      id = R.id.attendees;
      TextView attendees = ViewBindings.findChildViewById(rootView, id);
      if (attendees == null) {
        break missingId;
      }

      id = R.id.eventNameTextView;
      TextView eventNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (eventNameTextView == null) {
        break missingId;
      }

      id = R.id.mapCard;
      CardView mapCard = ViewBindings.findChildViewById(rootView, id);
      if (mapCard == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.notify_button;
      Button notifyButton = ViewBindings.findChildViewById(rootView, id);
      if (notifyButton == null) {
        break missingId;
      }

      id = R.id.qr_code_button;
      Button qrCodeButton = ViewBindings.findChildViewById(rootView, id);
      if (qrCodeButton == null) {
        break missingId;
      }

      id = R.id.signup_listview;
      ListView signupListview = ViewBindings.findChildViewById(rootView, id);
      if (signupListview == null) {
        break missingId;
      }

      return new EventDetailsBinding((ConstraintLayout) rootView, attendeeCount, attendeeListView,
          attendeeTextSignups, attendees, eventNameTextView, mapCard, mapView, notifyButton,
          qrCodeButton, signupListview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

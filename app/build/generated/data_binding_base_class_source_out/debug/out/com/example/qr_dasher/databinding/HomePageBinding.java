// Generated by view binder compiler. Do not edit!
package com.example.qr_dasher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qr_dasher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomePageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText detailsEdit;

  @NonNull
  public final EditText emailEdit;

  @NonNull
  public final CheckBox geolocation;

  @NonNull
  public final ImageView imageUpload;

  @NonNull
  public final EditText nameEdit;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Button selectImageButton;

  @NonNull
  public final Button uploadButton;

  private HomePageBinding(@NonNull LinearLayout rootView, @NonNull EditText detailsEdit,
      @NonNull EditText emailEdit, @NonNull CheckBox geolocation, @NonNull ImageView imageUpload,
      @NonNull EditText nameEdit, @NonNull Button nextButton, @NonNull Button selectImageButton,
      @NonNull Button uploadButton) {
    this.rootView = rootView;
    this.detailsEdit = detailsEdit;
    this.emailEdit = emailEdit;
    this.geolocation = geolocation;
    this.imageUpload = imageUpload;
    this.nameEdit = nameEdit;
    this.nextButton = nextButton;
    this.selectImageButton = selectImageButton;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.details_edit;
      EditText detailsEdit = ViewBindings.findChildViewById(rootView, id);
      if (detailsEdit == null) {
        break missingId;
      }

      id = R.id.email_edit;
      EditText emailEdit = ViewBindings.findChildViewById(rootView, id);
      if (emailEdit == null) {
        break missingId;
      }

      id = R.id.geolocation;
      CheckBox geolocation = ViewBindings.findChildViewById(rootView, id);
      if (geolocation == null) {
        break missingId;
      }

      id = R.id.image_upload;
      ImageView imageUpload = ViewBindings.findChildViewById(rootView, id);
      if (imageUpload == null) {
        break missingId;
      }

      id = R.id.name_edit;
      EditText nameEdit = ViewBindings.findChildViewById(rootView, id);
      if (nameEdit == null) {
        break missingId;
      }

      id = R.id.next_button;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.select_image_button;
      Button selectImageButton = ViewBindings.findChildViewById(rootView, id);
      if (selectImageButton == null) {
        break missingId;
      }

      id = R.id.upload_button;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new HomePageBinding((LinearLayout) rootView, detailsEdit, emailEdit, geolocation,
          imageUpload, nameEdit, nextButton, selectImageButton, uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.qr_dasher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qr_dasher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SendAnnouncementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView announcementTitle;

  @NonNull
  public final EditText announcmentTitleText;

  @NonNull
  public final Button sendAnnouncementButton;

  @NonNull
  public final TextView sendText;

  private SendAnnouncementBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView announcementTitle, @NonNull EditText announcmentTitleText,
      @NonNull Button sendAnnouncementButton, @NonNull TextView sendText) {
    this.rootView = rootView;
    this.announcementTitle = announcementTitle;
    this.announcmentTitleText = announcmentTitleText;
    this.sendAnnouncementButton = sendAnnouncementButton;
    this.sendText = sendText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SendAnnouncementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SendAnnouncementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.send_announcement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SendAnnouncementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.announcement_title;
      TextView announcementTitle = ViewBindings.findChildViewById(rootView, id);
      if (announcementTitle == null) {
        break missingId;
      }

      id = R.id.announcment_title_text;
      EditText announcmentTitleText = ViewBindings.findChildViewById(rootView, id);
      if (announcmentTitleText == null) {
        break missingId;
      }

      id = R.id.send_announcement_button;
      Button sendAnnouncementButton = ViewBindings.findChildViewById(rootView, id);
      if (sendAnnouncementButton == null) {
        break missingId;
      }

      id = R.id.send_text;
      TextView sendText = ViewBindings.findChildViewById(rootView, id);
      if (sendText == null) {
        break missingId;
      }

      return new SendAnnouncementBinding((ConstraintLayout) rootView, announcementTitle,
          announcmentTitleText, sendAnnouncementButton, sendText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
